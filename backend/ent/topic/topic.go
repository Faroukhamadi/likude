// Code generated by ent, DO NOT EDIT.

package topic

const (
	// Label holds the string label denoting the topic type in the database.
	Label = "topic"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeRelatedTopics holds the string denoting the related_topics edge name in mutations.
	EdgeRelatedTopics = "related_topics"
	// EdgeTopicRelations holds the string denoting the topic_relations edge name in mutations.
	EdgeTopicRelations = "topic_relations"
	// Table holds the table name of the topic in the database.
	Table = "topics"
	// RelatedTopicsTable is the table that holds the related_topics relation/edge. The primary key declared below.
	RelatedTopicsTable = "topic_relateds"
	// TopicRelationsTable is the table that holds the topic_relations relation/edge.
	TopicRelationsTable = "topic_relateds"
	// TopicRelationsInverseTable is the table name for the TopicRelated entity.
	// It exists in this package in order to avoid circular dependency with the "topicrelated" package.
	TopicRelationsInverseTable = "topic_relateds"
	// TopicRelationsColumn is the table column denoting the topic_relations relation/edge.
	TopicRelationsColumn = "topic_id"
)

// Columns holds all SQL columns for topic fields.
var Columns = []string{
	FieldID,
	FieldName,
}

var (
	// RelatedTopicsPrimaryKey and RelatedTopicsColumn2 are the table columns denoting the
	// primary key for the related_topics relation (M2M).
	RelatedTopicsPrimaryKey = []string{"topic_id", "related_topic_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
